version: '3'

services:
  nginx:
    build: ./nginx
    ports:
      - 1300:80
    volumes:
      - static_volume:/home/app/microservice/static
    depends_on:
      - web
    restart: "on-failure"
  web:
    image: sample_project:v2 #build the image for the web service from the dockerfile in parent directory
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py initiate_admin &&
                    python manage.py collectstatic &&
                    gunicorn sampleApp.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/microservice:rw # map data and files from parent directory in host to microservice directory in docker containe
      - static_volume:/home/app/microservice/static
    env_file:
      - .env
#    image: sampleapp

    expose:
      - 8000
    restart: "on-failure"
    depends_on:
      - db
  db:
    image: postgres:11-alpine
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data/
#    environment:
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#      - POSTGRES_DB=${DB_NAME}
#      - PGPORT=${DB_PORT}
#      - POSTGRES_USER=${POSTGRES_USER}

    environment:
      - POSTGRES_PASSWORD=testpassword
      - POSTGRES_DB=sample_db
      - PGPORT=5432
      - POSTGRES_USER=testuser
    restart: "on-failure"


volumes:
  postgres_data:
  static_volume: